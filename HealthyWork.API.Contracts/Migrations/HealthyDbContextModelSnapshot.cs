// <auto-generated />
using System;
using HealthyWork.API.Contracts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthyWork.API.Contracts.Migrations
{
    [DbContext(typeof(HealthyDbContext))]
    partial class HealthyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EmailEnabled");

                    b.Property<int>("Max");

                    b.Property<int>("Min");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("PushEnabled");

                    b.Property<bool>("TelegramEnabled");

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.HeadQuarters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("HeadQuarters");
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("HeadQuartersId")
                        .HasColumnName("HeadQuarters");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("HeadQuartersId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.TelegramPush", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChatId");

                    b.Property<Guid>("RoomId")
                        .HasColumnName("Room");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("TelegramPush");
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<Guid>("RoomId")
                        .HasColumnName("Room");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.Value", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("Level");

                    b.Property<Guid>("RoomId")
                        .HasColumnName("Room");

                    b.Property<double>("SensorValue");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Value");
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.Room", b =>
                {
                    b.HasOne("HealthyWork.API.Contracts.Models.HeadQuarters", "HeadQuarters")
                        .WithMany("Rooms")
                        .HasForeignKey("HeadQuartersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.TelegramPush", b =>
                {
                    b.HasOne("HealthyWork.API.Contracts.Models.Room", "Room")
                        .WithMany("TelegramPushes")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.User", b =>
                {
                    b.HasOne("HealthyWork.API.Contracts.Models.Room", "Room")
                        .WithMany("Users")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthyWork.API.Contracts.Models.Value", b =>
                {
                    b.HasOne("HealthyWork.API.Contracts.Models.Room", "Room")
                        .WithMany("Values")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
